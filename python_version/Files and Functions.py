# -*- coding: utf-8 -*-
"""Profissao Analista de dados M4 Exercicio.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yVy8kAMkEEfSCXvwCCF4RauV1kJUEJu-

<img src="https://raw.githubusercontent.com/andre-marcos-perez/ebac-course-utils/main/media/logo/newebac_logo_black_half.png" alt="ebac-logo">

---

# **Módulo** | Python: Arquivos & Funções
Caderno de **Exercícios**<br>
Professor [André Perez](https://www.linkedin.com/in/andremarcosperez/)

---

# **Tópicos**

<ol type="1">
  <li>Leitura;</li>
  <li>Escrita;</li>
  <li>Funções;</li>
  <li>Escopo.</li>
</ol>

---

# **Exercícios**

## 0\. Preparação do ambiente

Neste exercício vamos trabalhar com os arquivos de csv e texto definidos abaixo. Execute cada uma das células de código para escrever os arquivos na sua máquina virtual.

* **carros.csv**: arquivo csv com informações sobre carros (venda, manutenção, portas, etc.).
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile carros.csv
# id,valor_venda,valor_manutencao,portas,pessoas,porta_malas
# 1,vhigh,med,2,2,small
# 2,med,vhigh,2,2,small
# 3,low,vhigh,2,2,small
# 4,low,high,2,2,small
# 5,low,high,2,2,small
# 6,low,high,4,4,big
# 7,low,high,4,4,big
# 8,low,med,2,2,small
# 9,low,med,2,2,small
# 10,low,med,2,2,small
# 11,low,med,4,4,big
# 12,low,low,2,2,small
# 13,low,low,4,4,small
# 14,low,low,4,4,med

"""* **musica.txt**: arquivo texto com a letra da música Roda Viva do Chico Buarque."""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile musica.txt
# Roda Viva
# Chico Buarque
# 
# Tem dias que a gente se sente
# Como quem partiu ou morreu
# A gente estancou de repente
# Ou foi o mundo então que cresceu
# A gente quer ter voz ativa
# No nosso destino mandar
# Mas eis que chega a roda viva
# E carrega o destino pra lá
# 
# Roda mundo, roda-gigante
# Roda moinho, roda pião
# 
# O tempo rodou num instante
# Nas voltas do meu coração
# A gente vai contra a corrente
# Até não poder resistir
# Na volta do barco é que sente
# O quanto deixou de cumprir
# Faz tempo que a gente cultiva
# A mais linda roseira que há
# Mas eis que chega a roda viva
# E carrega a roseira pra lá
# 
# Roda mundo, roda-gigante
# Roda moinho, roda pião

"""---

## 1. Extração de coluna de arquivo csv

1.1. Extraia os valores `valor_venda` e armazena em uma lista.
"""

valor_venda = []

with open(file='./carros.csv', mode='r', encoding='utf8') as arquivo:
    linha = arquivo.readline() # lê o cabeçalho
    linha = arquivo.readline() # lê a primeira linha
    while linha:
       linha_separada = linha.split(sep=',') # quebra a string nas virgulas e salva os resultados em uma lista
       valor_vendas = linha_separada[1] # seleciona o segundo elemento da lista
       valor_vendas = str(valor_vendas) # salva o valor na lista de valor_venda
       valor_venda.append(valor_vendas)
       linha = arquivo.readline() # lê uma nova linha, se a linha não existir, salva o valor None

print(valor_venda)

"""1.2 Complete a função abaixo para extrair uma coluna, do arquivo csv em uma lista.

"""

def extrai_coluna_csv(nome_arquivo: str, indice_coluna: int):

  coluna = []

  with open(file = './carros.csv', mode='r', encoding='utf8') as arquivo:
      linha = arquivo.readline()
      linha = arquivo.readline()
      while linha:
        linha_separada = linha.split(',')
        linha = linha_separada[indice_coluna]
        coluna.append(linha)
        linha = arquivo.readline()

  return coluna

"""Você pode testar a função com os códigos abaixo."""

# extrair a coluna valor_manutencao
valor_manutencao = extrai_coluna_csv(nome_arquivo='./carros.csv', indice_coluna=2)
print(valor_manutencao) # deve retornar ['med', 'vhigh', 'vhigh', ...]

# extrair a coluna porta_malas
porta_malas = extrai_coluna_csv(nome_arquivo='./carros.csv', indice_coluna=5)
print(porta_malas) # deve retornar ['small', 'small', 'small', ...]

"""# Exercício bônus

## 1\. Funções para arquivo csv

Complete a função abaixo para extrair uma coluna do arquivo csv em uma lista. Os elementos devem ter o tipo de dado correto.
"""

def extrai_coluna_csv(nome_arquivo: str, indice_coluna: int, tipo_dado: str):

  coluna = []

  with open(file = './carros.csv', mode='r', encoding='utf8') as arquivo: # leia o arquivo com o comando 'with' utilizando o parametro 'nome_arquivo'
    linha = arquivo.readline()
    linha = arquivo.readline()
    while linha:
      linha_separada = linha.split(sep = ',')
      if tipo_dado=='str':
        coluna.append(linha_separada[indice_coluna])
      elif tipo_dado=='int':
        coluna.append(int(linha_separada[indice_coluna]))
      else:
        print("erro")

      linha = arquivo.readline()

  return coluna

"""Você pode testar a função com os códigos abaixo."""

# extrair a coluna valor_venda
valor_venda = extrai_coluna_csv(nome_arquivo='./carros.csv', indice_coluna=1, tipo_dado='str')
print(valor_venda) # deve retornar ['vhigh', 'med', 'low', ...]

# extrair a coluna pessoas
pessoas = extrai_coluna_csv(nome_arquivo='./carros.csv', indice_coluna=4, tipo_dado='int')
print(pessoas) # deve retornar [2, 2, 2, ...]

"""---

## 2\. Funções para arquivo txt

Complete a função abaixo para extrair uma as palavras de uma linha do arquivo txt em uma lista.
"""

def extrai_linha_txt(nome_arquivo: str, numero_linha: int):

  palavras_linha = []

  with open(file = './musica.txt', mode='r', encoding='utf8') as arquivo:
    linha = arquivo.read()
    while linha:
      linha_separada = linha.split(sep = '\n')
      palavras_linha = linha_separada[numero_linha-1].split()
      linha = arquivo.readline()

  return palavras_linha

"""Você pode testar a função com os códigos abaixo."""

linha10 = extrai_linha_txt(nome_arquivo='./musica.txt', numero_linha=10)
print(linha10) # deve retornar ['Mas', 'eis', 'que', 'chega', 'a', 'roda', 'viva']

"""---"""