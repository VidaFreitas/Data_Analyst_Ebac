# -*- coding: utf-8 -*-
"""Profissao Analista de dados M13 Exercicio.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ED1mnUtMju4j3lpW1JYe4iMaNpPh4MM7

<img src="https://raw.githubusercontent.com/andre-marcos-perez/ebac-course-utils/main/media/logo/newebac_logo_black_half.png" alt="ebac-logo">

---

# **Módulo** | Análise de Dados: Data Wrangling II
Caderno de **Exercícios**<br>
Professor [André Perez](https://www.linkedin.com/in/andremarcosperez/)

---

# **Tópicos**

<ol type="1">
  <li>Agregação e Ordenação;</li>
  <li>Combinação;</li>
  <li>Técnicas Avançadas.</li>
</ol>

---

# **Exercícios**

Neste exercícios, vamos trabalhar com dados geográficos, demográficos e econômicos do Brasil. Vamos manipular e combinar dados de duas frentes distintas para poder responder perguntas de negócios.

## 1\. Data Wrangling

### **1.1. Estados**

O arquivo `estados-bruto.xml` contém informações sobre estados (nome, sigla e região). **Carregue-o na máquina virtual do Google Colab**. Um arquivo do tipo XML é similar a um arquivo do tipo HTML, exemplo do estado do Acre:

```xml
<ESTADO>
  <ID>1</ID>
  <NOME>ACRE</NOME>
  <IDCAPITAL>16</IDCAPITAL>
  <SIGLA>AC</SIGLA>
  <REGIAO>NORTE</REGIAO>
</ESTADO>
```

Utilize o pacote Python `beautifulsoup4` para extrair os dados do arquivo `estados-bruto.xml` providenciado. Salve os dados extraidos no arquivo `estados-limpo.csv` separado por `;`. Exemplo das três primeiras linhas mais o cabeçalho:

```
estado;sigla;regiao
ACRE;AC;NORTE
ALAGOAS;AL;NORDESTE
AMAPA;AP;NORTE
```

**Dica**: Utilize o parser de xml chamado `lxml` do `beautifulsoup4`.
"""

# ler o arquivo estados-bruto.xml, utilize o xml parser chamado lxml

from bs4 import BeautifulSoup

NOME_ARQUIVO_FONTE = 'estados-bruto.xml'

fonte = BeautifulSoup(open('estados-bruto.xml', mode='r'), 'lxml')

# visualize os resultados

print(fonte)

# manipule os dados

estados_ex = list()
for linha in fonte.find_all('nome'):
  texto_coluna = linha.get_text().strip().split(sep='\n')
  estados_ex.append(texto_coluna)

estados = list()
for itens in estados_ex:
  estados.append(itens[0])


sigla_ex = list()
for linha in fonte.find_all('sigla'):
  texto_coluna = linha.get_text().strip().split(sep='\n')
  sigla_ex.append(texto_coluna)

sigla = list()
for itens in sigla_ex:
  sigla.append(itens[0])


regiao_ex = list()
for linha in fonte.find_all('regiao'):
  texto_coluna = linha.get_text().strip().split(sep='\n')
  regiao_ex.append(texto_coluna)

regiao = list()
for itens in regiao_ex:
  regiao.append(itens[0])

# escrever o conteudo extraido no arquivo estados-limpo.csv separados por ;

import csv

with open(file='./estados-limpo.csv', mode='w', encoding='utf8') as arquivo:
  escritor_csv = csv.writer(arquivo, delimiter=';')
  escritor_csv.writerows([['estado', 'sigla', 'regiao']] + list(map(lambda estado, sigla, regiao: [estado, sigla, regiao], estados, sigla, regiao)))

"""### **1.2. Cidades**

O arquivo `cidades-bruto.csv` contém informações demográficas e socioeconomicas das cidades do Brasil. **Carregue-o na máquina virtual do Google Colab**. Utilize o pacote Python `pandas` para extrair os dados do arquivo `cidades-bruto.xml` providenciado. Seguindo as seguintes especificações:

1. Apenas dados do censo de 2010;
1. Apenas as colunas UF, Nome, PIB, Pop_est_2009 e PIB_percapita.

Salve os dados extraidos no arquivo `cidades-limpo.csv` separado por `;`. Exemplo das três primeiras linhas mais o cabeçalho:

```
estado;cidade;populacao;pib;pib_percapita
BAHIA;TREMEDAL;18433;57883.9921875;3140.23999023
RIO GRANDE DO SUL;TURUÇU;4000;45723875;11430.96972656
ESPIRITO SANTO;VITÓRIA;320156;19782628;61790.58984375
```
"""

# ler o arquivo cidades-bruto.csv

import pandas as pd

cidades_df = pd.read_csv('cidades-bruto.csv', delimiter=',')

# visualize os resultados

cidades_df.head()

dados_limpos = cidades_df[cidades_df['Censo'] == 2010][['UF', 'nome', 'PIB', 'Pop_est_2009', 'PIB_percapita']]
dados_limpos.columns = ['estado', 'cidade', 'populacao', 'pib', 'pib_percapita']


dados_limpos.head(n=10)

# escrever o conteudo extraido no arquivo cidades-limpo.csv separados por ;

dados_limpos.to_csv('cidades-limpo.csv', sep=';', index=False)

"""### **1.3. Brasil**

Utilize o pacote Python `pandas` para combinar os dados do arquivo `estados-bruto.csv` com os dados do arquivo `cidades-bruto.csv` em um único dataframe. Escolha a coluna e o método de combinação de tal forma que **não haja perda de dados** no processo (não produzirá valores nulos `NaN`). Salve os dados do dataframe no arquivo `brasil.csv`
"""

# solução do exercício 1.3

cidades_df = pd.read_csv('cidades-limpo.csv', delimiter= ';')
estados_df = pd.read_csv('estados-limpo.csv', delimiter= ';')

cidades_df.head()

estados_df.head()

pd.concat([cidades_df[['estado']], estados_df[['estado']]])

brasil_df = pd.merge(left=cidades_df, right=estados_df, on='estado', how='outer')

"""---

## 2\. Data Analytics

### **2.1. DataFrame**

Utilize o pacote Python `pandas` para carregar o arquivo `brasil.csv` no dataframe `brasil_df`.
"""

# solução do exercício 2.1

brasil_df.to_csv('brasil.csv')

"""### **2.2. Analise**

Utilize o dataframe `brasil_df` para responder as seguintes perguntas de negócio:

- Quais são as 10 cidades mais populosas do Brasil?
"""

brasil_df.nlargest(10, 'populacao')[['cidade', 'populacao']]

""" - Quais são as 5 cidades com a menor PIB per capita da região nordeste?"""

df_nordeste = (brasil_df.loc[brasil_df['regiao'] == 'NORDESTE'])
df_nordeste.nsmallest(5, ['pib_percapita'])[['cidade', 'pib_percapita']]

""" - Quais são as 15 cidades com maior PIB do do estado de São Paulo?"""

df_saopaulo = (brasil_df.loc[brasil_df['estado'] == 'SÃO PAULO'])
df_saopaulo.nlargest(15, ['pib'])[['cidade', 'pib']]

""" - Qual é o PIB do estado de Santa Catarina?"""

df_sc = (brasil_df.loc[brasil_df['estado'] == 'SANTA CATARINA'])
soma = df_sc['pib'].sum()
display(soma)

""" - Qual é o população da região sul?"""

df_populacao = (brasil_df.loc[brasil_df['regiao'] == 'SUL'])
soma_pop = df_populacao['populacao'].sum()
display(soma_pop)

""" - Qual é o PIB per capito médio das cidades do Mato Grosso do Sul?"""

pib_ms = (brasil_df.loc[brasil_df['estado'] == 'MATO GROSSO DO SUL'])
pib_medio = pib_ms['pib_percapita'].sum() / 8
print(pib_medio)

""" - Qual é a população do Brasil?"""

populacao_br = brasil_df['populacao'].sum()
display(populacao_br)

"""### **2.3. Visualização**

Utilize o dataframe `brasil_df` para gerar as seguintes visualizações.

- Gere um gráfico de barras com as 10 cidades menos populosas do Brasil.
"""

import matplotlib.pyplot as plt

cidades_min = brasil_df.nsmallest(10, 'populacao')[['cidade', 'populacao']]
cidades_min.plot.scatter(x='populacao', y='cidade', colormap='viridis')

""" - Gere um gráfico de pizza com a proporção da população do Brasil por região."""

brasil_df[['regiao', 'populacao']].groupby('regiao').agg('sum').plot.pie(y='populacao', figsize=(5,5))