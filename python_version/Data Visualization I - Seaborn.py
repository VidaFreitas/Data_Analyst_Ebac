# -*- coding: utf-8 -*-
"""Profissao Analista de dados M14 Exercicio.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XlvpmQ0x7Nn489epBTWZMuId11r2IWFd

<img src="https://raw.githubusercontent.com/andre-marcos-perez/ebac-course-utils/main/media/logo/newebac_logo_black_half.png" alt="ebac-logo">

---

# **Módulo** | Análise de Dados: Visualização de Dados I
Caderno de **Exercícios**<br>
Professor [André Perez](https://www.linkedin.com/in/andremarcosperez/)

---

# **Tópicos**

<ol type="1">
  <li>Pacote Seaborn;</li>
  <li>Categorias: Gráficos de Barras e de Setores;</li>
  <li>Tendências: Gráficos de Linha e de Área.</li>
</ol>

---

# **Exercícios**

Nestes exercícios, você deve decidir qual é o gráfico visto em aula que melhor visualiza uma base de dados. Após decidir, você deverá criar a visualização usando o conteúdo exposto durante a aula e adicionar um pequeno parágrafo sobre um insights que pode ser extraido do gráfico.

## 1\. Preço do diamante por tipo de corte
"""

import seaborn as sns

data = sns.load_dataset("diamonds")
data.head()

# gráfico do exercício 1

diamonds = sns.boxplot(data=data,x='cut', y='price', palette='pastel')
diamonds.set(title="Diamond price by cut", xlabel="Cut Type", ylabel='Price')

"""**Insight do gráfico**:

1. Diamantes com corte 'Ideal' e 'Premium' tendem a ter preços semelhantes, com uma ligeira variação. Diamantes com corte 'Good' também têm preços próximos aos das categorias 'Ideal' e 'Premium', mas com uma variação um pouco maior.
2. O tipo de corte 'Ideal' tem a menor variação de preço em comparação com os outros tipos de corte.
3. Diamantes de corte 'Premium' têm uma variação moderada de preço, enquanto diamantes de corte 'Good' têm uma faixa de preço mais ampla, indicando uma maior diversidade nos valores dos diamantes dessa categoria.

---

## 2\. Número de passageiros em dezembro por ano
"""

import seaborn as sns

data = sns.load_dataset("flights")
data.head()

dec_month = data[data['month'] == 'Dec']

flights = dec_month[["year", "passengers"]].groupby("year").agg("sum").reset_index()
flights.head()

# gráfico do exercício 2
import seaborn as sns
import matplotlib.pyplot as plt

with sns.axes_style('whitegrid'):
    grafico = sns.lineplot(data=flights, x="year", y="passengers", palette="pastel")
    grafico.set(title='Passageiros por Ano em Dezembro', xlabel='Ano', ylabel='Passageiros')

"""**Insight do gráfico 2**:

1. Durante o período analisado, observamos um aumento consistente no número de passageiros em dezembro a cada ano. Esse padrão de crescimento constante sugere um aumento na demanda por viagens aéreas durante o período de dezembro, possivelmente devido a fatores sazonais, eventos especiais ou outras influências econômicas.

---

## 3\. Numero de passageiros por mês entre 1949 e 1959
"""

import seaborn as sns

data = sns.load_dataset("flights")
data.head()

# gráfico do exercício 3

flights = data.query('1949 <= year < 1959')


with sns.axes_style('whitegrid'):
    grafico = sns.lineplot(data=flights, x="month", y="passengers", hue="year", palette="pastel")
    grafico.set(title='Passengers per month in a year', xlabel='Year', ylabel='Passengers')
    grafico.get_legend().set_title("Years")

"""**Insight do gráfico 3**:

1. Na análise do grafico ao longo dos anos observamos uma tendência clara e consistente de aumento no número de passageiros. Esse padrão de crescimento pode ser devido ao desenvolvimento do setor de transporte aéreo, refletindo em uma maior acessibilidade às viagens aéreas como possíveis melhorias econômicas que incentivam mais pessoas a viajar de avião.
2. Outra observação interessante surge ao analisar os padrões sazonais de viagens aéreas. Durante os meses de junho a setembro, há um aumento significativo no número de passageiros, indicando uma clara tendência sazonal. Além disso, em novembro tem uma visivel queda e já dezembro também se destaca com um pico crescente, sugerindo um aumento nas viagens durante o período de festas de final de ano e celebrações de fim de ano.

---
"""